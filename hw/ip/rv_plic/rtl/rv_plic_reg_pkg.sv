// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package rv_plic_reg_pkg;

// Register to internal design logic
typedef struct packed {

  struct packed {
    struct packed {
      logic q; // [171]
    } le0;
    struct packed {
      logic q; // [170]
    } le1;
    struct packed {
      logic q; // [169]
    } le2;
    struct packed {
      logic q; // [168]
    } le3;
    struct packed {
      logic q; // [167]
    } le4;
    struct packed {
      logic q; // [166]
    } le5;
    struct packed {
      logic q; // [165]
    } le6;
    struct packed {
      logic q; // [164]
    } le7;
    struct packed {
      logic q; // [163]
    } le8;
    struct packed {
      logic q; // [162]
    } le9;
    struct packed {
      logic q; // [161]
    } le10;
    struct packed {
      logic q; // [160]
    } le11;
    struct packed {
      logic q; // [159]
    } le12;
    struct packed {
      logic q; // [158]
    } le13;
    struct packed {
      logic q; // [157]
    } le14;
    struct packed {
      logic q; // [156]
    } le15;
    struct packed {
      logic q; // [155]
    } le16;
    struct packed {
      logic q; // [154]
    } le17;
    struct packed {
      logic q; // [153]
    } le18;
    struct packed {
      logic q; // [152]
    } le19;
    struct packed {
      logic q; // [151]
    } le20;
    struct packed {
      logic q; // [150]
    } le21;
    struct packed {
      logic q; // [149]
    } le22;
    struct packed {
      logic q; // [148]
    } le23;
    struct packed {
      logic q; // [147]
    } le24;
    struct packed {
      logic q; // [146]
    } le25;
    struct packed {
      logic q; // [145]
    } le26;
    struct packed {
      logic q; // [144]
    } le27;
    struct packed {
      logic q; // [143]
    } le28;
    struct packed {
      logic q; // [142]
    } le29;
    struct packed {
      logic q; // [141]
    } le30;
    struct packed {
      logic q; // [140]
    } le31;
  } le;
  struct packed {
    logic [2:0] q; // [139:137]
  } prio0;
  struct packed {
    logic [2:0] q; // [136:134]
  } prio1;
  struct packed {
    logic [2:0] q; // [133:131]
  } prio2;
  struct packed {
    logic [2:0] q; // [130:128]
  } prio3;
  struct packed {
    logic [2:0] q; // [127:125]
  } prio4;
  struct packed {
    logic [2:0] q; // [124:122]
  } prio5;
  struct packed {
    logic [2:0] q; // [121:119]
  } prio6;
  struct packed {
    logic [2:0] q; // [118:116]
  } prio7;
  struct packed {
    logic [2:0] q; // [115:113]
  } prio8;
  struct packed {
    logic [2:0] q; // [112:110]
  } prio9;
  struct packed {
    logic [2:0] q; // [109:107]
  } prio10;
  struct packed {
    logic [2:0] q; // [106:104]
  } prio11;
  struct packed {
    logic [2:0] q; // [103:101]
  } prio12;
  struct packed {
    logic [2:0] q; // [100:98]
  } prio13;
  struct packed {
    logic [2:0] q; // [97:95]
  } prio14;
  struct packed {
    logic [2:0] q; // [94:92]
  } prio15;
  struct packed {
    logic [2:0] q; // [91:89]
  } prio16;
  struct packed {
    logic [2:0] q; // [88:86]
  } prio17;
  struct packed {
    logic [2:0] q; // [85:83]
  } prio18;
  struct packed {
    logic [2:0] q; // [82:80]
  } prio19;
  struct packed {
    logic [2:0] q; // [79:77]
  } prio20;
  struct packed {
    logic [2:0] q; // [76:74]
  } prio21;
  struct packed {
    logic [2:0] q; // [73:71]
  } prio22;
  struct packed {
    logic [2:0] q; // [70:68]
  } prio23;
  struct packed {
    logic [2:0] q; // [67:65]
  } prio24;
  struct packed {
    logic [2:0] q; // [64:62]
  } prio25;
  struct packed {
    logic [2:0] q; // [61:59]
  } prio26;
  struct packed {
    logic [2:0] q; // [58:56]
  } prio27;
  struct packed {
    logic [2:0] q; // [55:53]
  } prio28;
  struct packed {
    logic [2:0] q; // [52:50]
  } prio29;
  struct packed {
    logic [2:0] q; // [49:47]
  } prio30;
  struct packed {
    logic [2:0] q; // [46:44]
  } prio31;
  struct packed {
    struct packed {
      logic q; // [43]
    } e0;
    struct packed {
      logic q; // [42]
    } e1;
    struct packed {
      logic q; // [41]
    } e2;
    struct packed {
      logic q; // [40]
    } e3;
    struct packed {
      logic q; // [39]
    } e4;
    struct packed {
      logic q; // [38]
    } e5;
    struct packed {
      logic q; // [37]
    } e6;
    struct packed {
      logic q; // [36]
    } e7;
    struct packed {
      logic q; // [35]
    } e8;
    struct packed {
      logic q; // [34]
    } e9;
    struct packed {
      logic q; // [33]
    } e10;
    struct packed {
      logic q; // [32]
    } e11;
    struct packed {
      logic q; // [31]
    } e12;
    struct packed {
      logic q; // [30]
    } e13;
    struct packed {
      logic q; // [29]
    } e14;
    struct packed {
      logic q; // [28]
    } e15;
    struct packed {
      logic q; // [27]
    } e16;
    struct packed {
      logic q; // [26]
    } e17;
    struct packed {
      logic q; // [25]
    } e18;
    struct packed {
      logic q; // [24]
    } e19;
    struct packed {
      logic q; // [23]
    } e20;
    struct packed {
      logic q; // [22]
    } e21;
    struct packed {
      logic q; // [21]
    } e22;
    struct packed {
      logic q; // [20]
    } e23;
    struct packed {
      logic q; // [19]
    } e24;
    struct packed {
      logic q; // [18]
    } e25;
    struct packed {
      logic q; // [17]
    } e26;
    struct packed {
      logic q; // [16]
    } e27;
    struct packed {
      logic q; // [15]
    } e28;
    struct packed {
      logic q; // [14]
    } e29;
    struct packed {
      logic q; // [13]
    } e30;
    struct packed {
      logic q; // [12]
    } e31;
  } ie0;
  struct packed {
    logic [2:0] q; // [11:9]
  } threshold0;
  struct packed {
    logic [5:0] q; // [8:3]
    logic qe; // [2]
    logic re; // [1]
  } cc0;
  struct packed {
    logic [0:0] q; // [0:0]
  } msip0;
} rv_plic_reg2hw_t;

// Internal design logic to register
typedef struct packed {

  struct packed {
    struct packed {
      logic d;  // [69]
      logic de; // [68]
    } p0;
    struct packed {
      logic d;  // [67]
      logic de; // [66]
    } p1;
    struct packed {
      logic d;  // [65]
      logic de; // [64]
    } p2;
    struct packed {
      logic d;  // [63]
      logic de; // [62]
    } p3;
    struct packed {
      logic d;  // [61]
      logic de; // [60]
    } p4;
    struct packed {
      logic d;  // [59]
      logic de; // [58]
    } p5;
    struct packed {
      logic d;  // [57]
      logic de; // [56]
    } p6;
    struct packed {
      logic d;  // [55]
      logic de; // [54]
    } p7;
    struct packed {
      logic d;  // [53]
      logic de; // [52]
    } p8;
    struct packed {
      logic d;  // [51]
      logic de; // [50]
    } p9;
    struct packed {
      logic d;  // [49]
      logic de; // [48]
    } p10;
    struct packed {
      logic d;  // [47]
      logic de; // [46]
    } p11;
    struct packed {
      logic d;  // [45]
      logic de; // [44]
    } p12;
    struct packed {
      logic d;  // [43]
      logic de; // [42]
    } p13;
    struct packed {
      logic d;  // [41]
      logic de; // [40]
    } p14;
    struct packed {
      logic d;  // [39]
      logic de; // [38]
    } p15;
    struct packed {
      logic d;  // [37]
      logic de; // [36]
    } p16;
    struct packed {
      logic d;  // [35]
      logic de; // [34]
    } p17;
    struct packed {
      logic d;  // [33]
      logic de; // [32]
    } p18;
    struct packed {
      logic d;  // [31]
      logic de; // [30]
    } p19;
    struct packed {
      logic d;  // [29]
      logic de; // [28]
    } p20;
    struct packed {
      logic d;  // [27]
      logic de; // [26]
    } p21;
    struct packed {
      logic d;  // [25]
      logic de; // [24]
    } p22;
    struct packed {
      logic d;  // [23]
      logic de; // [22]
    } p23;
    struct packed {
      logic d;  // [21]
      logic de; // [20]
    } p24;
    struct packed {
      logic d;  // [19]
      logic de; // [18]
    } p25;
    struct packed {
      logic d;  // [17]
      logic de; // [16]
    } p26;
    struct packed {
      logic d;  // [15]
      logic de; // [14]
    } p27;
    struct packed {
      logic d;  // [13]
      logic de; // [12]
    } p28;
    struct packed {
      logic d;  // [11]
      logic de; // [10]
    } p29;
    struct packed {
      logic d;  // [9]
      logic de; // [8]
    } p30;
    struct packed {
      logic d;  // [7]
      logic de; // [6]
    } p31;
  } ip;
  struct packed {
    logic [5:0] d; // [5:0]
  } cc0;
} rv_plic_hw2reg_t;

  // Register Address
  parameter RV_PLIC_IP_OFFSET = 9'h 0;
  parameter RV_PLIC_LE_OFFSET = 9'h 4;
  parameter RV_PLIC_PRIO0_OFFSET = 9'h 8;
  parameter RV_PLIC_PRIO1_OFFSET = 9'h c;
  parameter RV_PLIC_PRIO2_OFFSET = 9'h 10;
  parameter RV_PLIC_PRIO3_OFFSET = 9'h 14;
  parameter RV_PLIC_PRIO4_OFFSET = 9'h 18;
  parameter RV_PLIC_PRIO5_OFFSET = 9'h 1c;
  parameter RV_PLIC_PRIO6_OFFSET = 9'h 20;
  parameter RV_PLIC_PRIO7_OFFSET = 9'h 24;
  parameter RV_PLIC_PRIO8_OFFSET = 9'h 28;
  parameter RV_PLIC_PRIO9_OFFSET = 9'h 2c;
  parameter RV_PLIC_PRIO10_OFFSET = 9'h 30;
  parameter RV_PLIC_PRIO11_OFFSET = 9'h 34;
  parameter RV_PLIC_PRIO12_OFFSET = 9'h 38;
  parameter RV_PLIC_PRIO13_OFFSET = 9'h 3c;
  parameter RV_PLIC_PRIO14_OFFSET = 9'h 40;
  parameter RV_PLIC_PRIO15_OFFSET = 9'h 44;
  parameter RV_PLIC_PRIO16_OFFSET = 9'h 48;
  parameter RV_PLIC_PRIO17_OFFSET = 9'h 4c;
  parameter RV_PLIC_PRIO18_OFFSET = 9'h 50;
  parameter RV_PLIC_PRIO19_OFFSET = 9'h 54;
  parameter RV_PLIC_PRIO20_OFFSET = 9'h 58;
  parameter RV_PLIC_PRIO21_OFFSET = 9'h 5c;
  parameter RV_PLIC_PRIO22_OFFSET = 9'h 60;
  parameter RV_PLIC_PRIO23_OFFSET = 9'h 64;
  parameter RV_PLIC_PRIO24_OFFSET = 9'h 68;
  parameter RV_PLIC_PRIO25_OFFSET = 9'h 6c;
  parameter RV_PLIC_PRIO26_OFFSET = 9'h 70;
  parameter RV_PLIC_PRIO27_OFFSET = 9'h 74;
  parameter RV_PLIC_PRIO28_OFFSET = 9'h 78;
  parameter RV_PLIC_PRIO29_OFFSET = 9'h 7c;
  parameter RV_PLIC_PRIO30_OFFSET = 9'h 80;
  parameter RV_PLIC_PRIO31_OFFSET = 9'h 84;
  parameter RV_PLIC_IE0_OFFSET = 9'h 100;
  parameter RV_PLIC_THRESHOLD0_OFFSET = 9'h 104;
  parameter RV_PLIC_CC0_OFFSET = 9'h 108;
  parameter RV_PLIC_MSIP0_OFFSET = 9'h 10c;


endpackage
